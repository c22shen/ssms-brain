<script src="http://code.highcharts.com/highcharts.js"></script>
  <script src="https://maps.googleapis.com/maps/api/js"></script>
<script src="http://code.highcharts.com/highcharts-3d.js"></script>
 <script type="text/javascript">
    function drawFloorChart(container_name, seat_data) {
    $(container_name).highcharts({
        chart: {
            type: 'scatter',
            zoomType: 'xy',
            backgroundColor: null
        },
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        xAxis: {
            title: {
                enabled: false,
                text: ''
            },
            labels:
            {
              enabled: false
            },
            lineWidth: 0,
            minorGridLineWidth: 0,
            // lineColor: 'transparent',

            minorTickLength: 0,
            tickLength: 0
        },
        yAxis: {

            title: {
                enabled: false,
                text: ''
            },

            labels:
            {
              enabled: false
            },
            lineWidth: 0,
            minorGridLineWidth: 0,
            lineColor: 'transparent',
            gridLineColor: 'transparent',
            
            minorTickLength: 0,
            tickLength: 0
        },
        legend: {
           itemStyle: {
                 font: '9pt Trebuchet MS, Verdana, sans-serif',
                 color: 'white'
              },
               enabled: false

        },
        exporting: {
         enabled: false
        },

        plotOptions: {
                      series: {
                        allowPointSelect: true,
                states: {
                    hover: {
                      enabled: false

 // radiusPlus: 5
                    }
                }
            },
            scatter: {
                marker: {
                    radius: 5
                },
                tooltip: {
                    headerFormat: '',
                    pointFormat: 'Device UID: {point.name} X: {point.x:.2f} Y: {point.y:.2f}'
                }
            }
        },
        series: [{
            name: 'ssms',
            color: "#EF5E43",
            data: seat_data,
             marker: {
                lineWidth: 0,
                radius: 12,
                lineColor: null
            }
        }
        ]
    });
}



 function drawSplineChart(container_name, free_seat_count) {
        $(container_name).highcharts({
            chart: {
              backgroundColor: null,
                type: 'spline',
                animation: Highcharts.svg // don't animate in old IE
            },
            title: {
                text: ''
            },
            min:0,
            xAxis: {
                type: 'datetime',
                tickPixelInterval: 150,
                              labels: {
         style: {
            color: 'white',
            font: '11px Trebuchet MS, Verdana, sans-serif'
         }
              }
            },
            yAxis: {
              labels: {
         style: {
            color: 'white',
            font: '11px Trebuchet MS, Verdana, sans-serif'
         }
              },
                title: {
                    text: ''
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#6a6a6a'
                }]
            },
            tooltip: {
                formatter: function () {
                    return '<b>' + this.series.name + '</b><br/>' +
                        Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
                        Highcharts.numberFormat(this.y, 2);
                }
            },
            legend: {
                enabled: false
            },
            exporting: {
                enabled: false
            },
            series: [{
                name: 'Library Occupancy',
                color: 'white',
                data: (function () {
                    // generate an array of random data
                    var data = [],
                        time = (new Date()).getTime()- 4*1000*60*60,
                        i;

                    for (i = -10; i <= 0; i += 1) {
                        data.push({
                            x: time + i * 5000,
                            y: Math.floor(Math.random()*1.5* free_seat_count)
                        });
                    }
                    return data;
                }())
            }]
        });
}






function drawBarGraph(container_name, library_names, free_data, busy_data ) {
    $(container_name).highcharts({
        chart: {
            type: 'bar',
            backgroundColor: null
        },
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        xAxis: {
                gridLineWidth: 0,
                minorGridLineWidth: 0,
                minorTickLength: 0,
   tickLength: 0,
   gridLineColor: 'transparent',
   // lineColor: 'transparent',

            categories: library_names,
            title: {
                text: ''
            },
            labels: {
                overflow: 'justify',
                style:{
                        color:'white'
                    }
            },


        },
        yAxis: {
          gridLineWidth: 0,
                minorGridLineWidth: 0,
                minorTickLength: 0,
   tickLength: 0,
   // gridLineColor: 'transparent',
   // lineColor: 'transparent',
            min: 0,

            title: {
                text: '',
                align: 'high',
                // style: {
                //   color: '#ffffff'
                // },

            },

            labels: {
              enabled: false,
                style:{
                        color:'white'
                    }
            },

        },
        tooltip: {
            valueSuffix: 'seats'
        },
        plotOptions: {
            bar: {
                dataLabels: {
                    enabled: false
                },

            },series: {
                borderWidth: 0,
                borderColor: 'black'
            }
        },
        legend: {
itemStyle: {
                 font: '9pt Trebuchet MS, Verdana, sans-serif',
                 color: 'white'
              }
            },
        exporting: {
                enabled: false
            },
        credits: {
            enabled: false
        },
        series: [ 
        {
            name: 'Busy',
            color: "#EF5E43",
            data: busy_data
        },{
            name: 'Free',
            color: '#8DEB95',
            data: free_data
        }
        ]
    });
}







function draw3DScatterGraph(container_name, seat_data, z_max, y_max) 
{
    // Set up the chart
     var chart = new Highcharts.Chart({
        chart: {
            margin: 100,
            renderTo: container_name.substring(1),
            type: 'scatter',
// inverted: true,
            backgroundColor: null,
            options3d: {
                enabled: true,
                  alpha: 15,
                beta: 25,
                viewDistance: 5,
                depth: 150,
                // viewDistance: 5,

                frame: {
                    bottom: { 
                       size: 1, 
                      color: 'rgba(255,255,255,0.06)' 
                  },
                    back: { 
                      size: 1, 
                      color: 'rgba(255,255,255,0.08)'   
                    },
                    side: { 
                      size: 1, 
                      color: 'rgba(255,255,255,0.10)' 
                    }
                }
            }
        },
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        plotOptions: {
            scatter: {
              marker: {
                    radius: 5
                },
                // width: 10,
                // height: 10,
                // depth: 10
            }
        },
        yAxis: {
             min: 1,
             max: y_max,
            title: null,
            allowDecimals: false,
labels:
            {
              format: 'Floor {value}',
              style: {
                    color: 'white',
                    font: '11px Trebuchet MS, Verdana, sans-serif'
                }
            },
            ineWidth: 0,
            minorGridLineWidth: 0,
            lineColor: 'transparent',
            gridLineColor: 'transparent',
            
            minorTickLength: 0,
            tickLength: 0
        },
        xAxis: {
            // min: 0,
            // max: 10,
            gridLineWidth: 0,
            labels:
            {
              enabled: false
            },
            lineWidth: 0,
            minorGridLineWidth: 0,
            // lineColor: 'transparent',

            minorTickLength: 0,
            tickLength: 0
        },
        zAxis: {
            min: 0,
             max: z_max,
             labels:
            {
              format: 'Floor: {value}',
              style: {
                    color: 'white',
                    font: '11px Trebuchet MS, Verdana, sans-serif'
                }
            },
        },
                tooltip: {
                formatter: function () {
                    return ''
                },
                enabled: false
            },

        legend: {
            enabled: false
        },
        exporting: {
         enabled: false
        },
        series: [{
            name: 'seatStatus',
            colorByPoint: true,
            data: seat_data
        }]
    });

 // Activate the sliders
    $('#R0').on('change', function () {
        chart.options.chart.options3d.alpha = this.value;
        chart.redraw(false);
    });
    $('#R1').on('change', function () {
        chart.options.chart.options3d.beta = this.value;

        chart.redraw(false);
    });

    $('#R0-value').html(chart.options.chart.options3d.alpha);
        $('#R1-value').html(chart.options.chart.options3d.beta);


    // Add mouse events for rotation
    $(chart.container).bind('mousedown.hc touchstart.hc', function (e) {
        e = chart.pointer.normalize(e);

        var posX = e.pageX,
            posY = e.pageY,
            alpha = chart.options.chart.options3d.alpha,
            beta = chart.options.chart.options3d.beta,
            newAlpha,
            newBeta,
            sensitivity = 5; // lower is more sensitive

        $(document).bind({
            'mousemove.hc touchdrag.hc': function (e) {
                // Run beta
                newBeta = beta + (posX - e.pageX) / sensitivity;
                newBeta = Math.min(100, Math.max(-100, newBeta));
                chart.options.chart.options3d.beta = newBeta;

                // Run alpha
                newAlpha = alpha + (e.pageY - posY) / sensitivity;
                newAlpha = Math.min(100, Math.max(-100, newAlpha));
                chart.options.chart.options3d.alpha = newAlpha;

                chart.redraw(false);
            },
            'mouseup touchend': function () {
                $(document).unbind('.hc');
            }
        });
    });

}



function initialize(lat,lon) {
var mapCanvas = document.getElementById('map-canvas');
var dc = new google.maps.LatLng(lat,lon);
var mapOptions = {
  zoom: 18,
  center: dc
}
var map = new google.maps.Map(mapCanvas, mapOptions);

// To add the marker to the map, use the 'map' property

var marker = new google.maps.Marker({
    position: dc,
    map: map,
    title:"University of Waterloo"
});

map.set('styles', [
  {
    featureType: 'road',
    elementType: 'geometry',
    stylers: [
      { color: '#34495E' },
      { weight: 1.3 }
    ]
  }, {
    featureType: 'road',
    elementType: 'labels',
    stylers: [
      { saturation: -100 },
      { invert_lightness: true }
    ]
  }, {
    featureType: 'landscape',
    elementType: 'geometry',
    stylers: [
      { hue: '#008080' },
      { gamma: 1.4 },
      { saturation: 82 },
      { lightness: 96 }
    ]
  }, {
    featureType: 'poi.school',
    elementType: 'geometry',
    stylers: [
      { hue: '#2980B9' },
      { lightness: -15 },
      { saturation: 99 }
    ]
  }
]);     
}
</script>
   


<%= tag("div", id: "info-div", data: {splineContainerName: @splineChartContainerName, d3ContainerName: @d3ChartContainerName, floorContainerName: @floorChartContainerName, barContainerName: @barChartContainerName, freeSeatCount: @free_seat_count, seats3dArray: @seats_3d_array, seatsFloorArray: @seats_floor_array, plot3dZMax: @plot_3d_z_max, plot3dYMax: @plot_3d_y_max, lat: @library.lat, lon: @library.lon, libraryNamesArray: @library_names_array, libraryFreeInfoArray: @library_free_info_array, libraryBusyInfoArray: @library_busy_info_array, freeSeatCountLabelName: @freeSeatCountLabelName, busySeatCountLabelName: @busySeatCountLabelName, freeSeatPercentChartName: @freeSeatPercentChartName, occupancyMsgContainerName: @occupancyMsgContainerName, displayFloor: @displayFloor, currLibraryId: @currLibraryId}) %>

<%= render 'navbar' %>
<!-- <div class="map-section"> -->
    <div id="map-canvas" class="jumbotron" style="height:100%; width:100%;background:  transparent no-repeat 1 1;
  height:       450px;
  margin-top:52px;
  margin-bottom:0;">
</div>

<!--  <div id="overlay" style=" background:  #fff;
  opacity:      .8;
  position:     relative;
  padding:      10px;
  top:          -300px;
  z-index:      2;
  margin:       0 auto;
  width:        75%;
  border-radius:5px;">
        <h1 style="text-align:center;
color: #2D3E50;
font-family:'Lato Hairline', Arial;
font-size: 40px;
        "><%=@library_welcome_msg %></h1>
  </div> -->

 <div class="library-info-section" style="width:100%; background: #252020">
    <div class="container" style="opacity:0.7;">
<!--   <div class="container" style="opacity:0.7; background: #252020; padding-bottom:20px"> -->
  <h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:60px">Details</h1>
  <hr>
  <div class="row">
    <div class="col-sm-6">
      <div class="progress-pie-chart" id=<%= @freeSeatPercentChartName[1..-1] %> data-percent=<%=@free_seat_percentage %> >
  <div class="ppc-progress">
    <div class="ppc-progress-fill"></div>
  </div>
  <div class="ppc-percents">
    <div class="pcc-percents-wrapper">
      <span>%</span>
    </div>
  </div>
</div>

<% if @free_seat_percentage > 20 %>
  <p class="text-center status-message" id=<%= @occupancyMsgContainerName[1..-1] %> style="margin-top:20px; font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:20px" > 
      <i class="fa fa-smile-o" style="color:white; font-size:30px"></i>
      <%= getEmptyMessage(@library.name) %>
    </p>
<% else %>
  <p class="text-center" style="margin-top:20px; font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:20px" > 
        <i class="fa fa-frown-o" style="color:white; font-size:30px"></i>
       <%= getFullMessage(@library.name) %>
  </p>
<% end %>

    </div>

    <div class="col-sm-6">
      <div class="row">
        <div class="col-xs-6">
         <h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white">Seats free</h1> 
        </div>
        <div class="col-xs-6">
          <h1 id=<%= @freeSeatCountLabelName[1..-1] %> style="text-align:right; font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:40px"><%= @free_seat_count %></h1>
        </div>
        <div class="col-xs-12">
        <hr style="border-top: dotted 1px; color:grey" />
        </div>
      </div>


      <div class="row">
        <div class="col-xs-6">
         <h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white">Seats busy</h1> 
        </div>
        <div class="col-xs-6">
          <h1 id=<%= @busySeatCountLabelName[1..-1] %> style="text-align:right; font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:40px"><%= @busy_seat_count %></h1>
        </div>
        <div class="col-xs-12">
        <hr style="border-top: dotted 1px; color:grey" />
        </div>
      </div>



    </div>
  </div>

</div>
</div>


 <div class="library-map-section">



  <div class="container" style="background: #2980B9; opacity:0.7">


<h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:60px">Number of Free Seats Available</h1>
<hr>


<h2 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:30px; margin-bottom:20px"><%=Date.today.strftime('%a %d %b %Y')%></h2>

<div id=<%=@splineChartContainerName[1..-1] %> style="min-width: 310px; height: 400px; width:100%; margin: 0 auto"></div>
</div>
</div>

<div class="library-map-section3d" style="">

<div class="container" style="opacity:1;">


<h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:60px">
  Study Space Locations and Availabilities 
</h1>

<hr style="border-top: solid 1px; color:white">
<h2 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:30px; margin-bottom:20px"><%= @library.name %> - <%= @library.school %></h2>


<% @library.floor_array.each do |floor| %>

<%= content_tag(:button, getFloorBtnText(floor), class:["btn", "btn-info", "btn-sm", "floor-btn"], :"data-floor" => floor, :"data-library" => @library.id) %>
<% end %>

<div id=<%= @d3ChartContainerName[1..-1] %>> </div>
<div id="sliders" class="hidden-lg">

    <h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:20px; margin:50px">Vertical Rotation</h1> 
    <input id="R0" type="range" min="0" max="45" value="15"/> 
      <h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:20px; margin:50px">Horizontal Rotation</h1>
      <input id="R1" type="range" min="0" max="45" value="15"/> 
  </table>
</div>


</div>
</div>

<div class="library-map-section1" style="">
  <div class="container" style="opacity:1;">
    <h1 style="font-family: 'Roboto', sans-serif;
      font-weight: 100; color:black; font-size:60px">
      Floor Detail
    </h1>

    <hr style="border-top: solid 1px; color:black">
     <div class="floor-chart" style="left: 0px; top: 0px;">
        <h2 id='floorNameDisplay' style="font-family: 'Roboto', sans-serif;font-weight: 100; color:black; font-size:30px; margin-bottom:20px"><%= @library.name %> <%= getFloorName(@displayFloor) %> </h2>
        <div id=<%= @floorChartContainerName[1..-1] %> style="height: 400px; min-width: 310px; width:100%; margin: 0 auto"></div>
      </div>

  </div>
</div>




<div class="library-map-section2" style="">


<div class="container" style="opacity:1;">

<h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:60px">
  Library Comparison
</h1>
<hr>
<h2 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:30px; margin-bottom:20px"><%= @library.school %></h2>


<div id= <%= @barChartContainerName[1..-1] %> style="height: 400px; min-width: 310px; width:100%; margin: 0 auto"></div>

</div>
</div>

<div class="discussion-section" style="">
  <div class="container">
  <h1 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:60px">
  Student Discussions 
</h1>

<hr style="border-top: solid 1px; color:white">
<h2 style="font-family: 'Roboto', sans-serif;
    font-weight: 100; color:white; font-size:30px; margin-bottom:20px"><%= @library.name %> - <%= @library.school %></h2>

 <div class="new-article" style="margin-top:50px">
  <h2 style="font-family: 'Roboto', sans-serif;
    font-weight: 300; color:white; font-size:24px; margin-bottom:20px">Create New Comment</h2>
    <div class="row">

        <div class="col-sm-6">
      <input type="text" id="commentTitleField", placeholder='Name', style ="
    border: none !important;   box-shadow: none !important;   outline: none !important;   
    background-color: transparent;   width: 100%;   height: 71px;   font-size: 50px;   font-family: 'Roboto', sans-serif;
    font-weight: 300; 
    color: #2980b9;   
    border-bottom: 3px solid #2980B9 !important;" >
    </div>
    <div class="col-sm-6">
      <input type="text" MaxLength="1" id="commentRatingField", placeholder='Rating(1-5)', style ="
    border: none !important;   box-shadow: none !important;   outline: none !important;   
    background-color: transparent;   width: 100%;   height: 71px;   font-size: 50px;   font-family: 'Roboto', sans-serif;
    font-weight: 300; 
    color: #2980b9;   
    border-bottom: 3px solid #2980B9 !important;" >
    </div>

  </div>
  <div class="row">
        <div class="col-sm-12">

 <input type="text" id="commentContentField", placeholder='Content', style ="
    border: none !important;   box-shadow: none !important;   outline: none !important;   
    background-color: transparent;   width: 100%;   height: 71px;   font-size: 50px;   font-family: 'Roboto', sans-serif;
    font-weight: 300; 
    color: #2980b9;   
    border-bottom: 3px solid #2980B9 !important;" >


    </div>
  </div>
<div class="row" style="padding: 30px 0;">
  <div class="col-xs-12">
       <%= content_tag 'button', 'SUBMIT', :id=> 'commentSubmitBtn', :'data-libraryid'=>@library.id, :style => 'color: white;background: #2980b9;padding: 10px 20px;font-size: 30px; border:none;margin: 0 auto;display: block;' %>
  </div>
</div>
   </p>


 </div> 

  <div class="articles-container"> 
 <%# @library.articles.order("id DESC").each do |article| %>
 <%= render partial: "articles", :locals => {:articles => @library.articles} %>
 </div>
<%# end %>


  </div>
</div>


